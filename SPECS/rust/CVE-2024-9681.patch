From 1a4305628fd46e50614cc4e918a834db8fe1d1e3 Mon Sep 17 00:00:00 2001
From: jykanase <v-jykanase@microsoft.com>
Date: Mon, 27 Jan 2025 06:55:46 +0000
Subject: [PATCH] CVE-2024-9681

Backported form: https://github.com/curl/curl/commit/a94973805df96269bf
---
 vendor/curl-sys-0.4.63+curl-8.1.2/curl/lib/hsts.c | 14 ++++++++++----
 vendor/curl-sys/curl/lib/hsts.c                   | 14 ++++++++++----
 2 files changed, 20 insertions(+), 8 deletions(-)

diff --git a/vendor/curl-sys-0.4.63+curl-8.1.2/curl/lib/hsts.c b/vendor/curl-sys-0.4.63+curl-8.1.2/curl/lib/hsts.c
index 53c01fc52..edbcfab99 100644
--- a/vendor/curl-sys-0.4.63+curl-8.1.2/curl/lib/hsts.c
+++ b/vendor/curl-sys-0.4.63+curl-8.1.2/curl/lib/hsts.c
@@ -248,12 +248,14 @@ CURLcode Curl_hsts_parse(struct hsts *h, const char *hostname,
 struct stsentry *Curl_hsts(struct hsts *h, const char *hostname,
                            bool subdomain)
 {
+  struct stsentry *bestsub = NULL;
   if(h) {
     char buffer[MAX_HSTS_HOSTLEN + 1];
     time_t now = time(NULL);
     size_t hlen = strlen(hostname);
     struct Curl_llist_element *e;
     struct Curl_llist_element *n;
+    size_t blen = 0;
 
     if((hlen > MAX_HSTS_HOSTLEN) || !hlen)
       return NULL;
@@ -278,15 +280,19 @@ struct stsentry *Curl_hsts(struct hsts *h, const char *hostname,
         if(ntail < hlen) {
           size_t offs = hlen - ntail;
           if((hostname[offs-1] == '.') &&
-             strncasecompare(&hostname[offs], sts->host, ntail))
-            return sts;
+             strncasecompare(&hostname[offs], sts->host, ntail) &&
+             (ntail > blen)) {
+            /* save the tail match with the longest tail */
+            bestsub = sts;
+            blen = ntail;
+          }
         }
       }
       if(strcasecompare(hostname, sts->host))
         return sts;
     }
   }
-  return NULL; /* no match */
+  return bestsub;
 }
 
 /*
@@ -438,7 +444,7 @@ static CURLcode hsts_add(struct hsts *h, char *line)
     e = Curl_hsts(h, p, subdomain);
     if(!e)
       result = hsts_create(h, p, subdomain, expires);
-    else {
+    else if(strcasecompare(p, e->host)) {
       /* the same host name, use the largest expire time */
       if(expires > e->expires)
         e->expires = expires;
diff --git a/vendor/curl-sys/curl/lib/hsts.c b/vendor/curl-sys/curl/lib/hsts.c
index 7ecf0042a..3d11f258e 100644
--- a/vendor/curl-sys/curl/lib/hsts.c
+++ b/vendor/curl-sys/curl/lib/hsts.c
@@ -249,12 +249,14 @@ CURLcode Curl_hsts_parse(struct hsts *h, const char *hostname,
 struct stsentry *Curl_hsts(struct hsts *h, const char *hostname,
                            bool subdomain)
 {
+  struct stsentry *bestsub = NULL;
   if(h) {
     char buffer[MAX_HSTS_HOSTLEN + 1];
     time_t now = time(NULL);
     size_t hlen = strlen(hostname);
     struct Curl_llist_element *e;
     struct Curl_llist_element *n;
+    size_t blen = 0;
 
     if((hlen > MAX_HSTS_HOSTLEN) || !hlen)
       return NULL;
@@ -279,15 +281,19 @@ struct stsentry *Curl_hsts(struct hsts *h, const char *hostname,
         if(ntail < hlen) {
           size_t offs = hlen - ntail;
           if((hostname[offs-1] == '.') &&
-             strncasecompare(&hostname[offs], sts->host, ntail))
-            return sts;
+             strncasecompare(&hostname[offs], sts->host, ntail) &&
+             (ntail > blen)) {
+            /* save the tail match with the longest tail */
+            bestsub = sts;
+            blen = ntail;
+          }
         }
       }
       if(strcasecompare(hostname, sts->host))
         return sts;
     }
   }
-  return NULL; /* no match */
+  return bestsub;
 }
 
 /*
@@ -439,7 +445,7 @@ static CURLcode hsts_add(struct hsts *h, char *line)
     e = Curl_hsts(h, p, subdomain);
     if(!e)
       result = hsts_create(h, p, subdomain, expires);
-    else {
+    else if(strcasecompare(p, e->host)) {
       /* the same host name, use the largest expire time */
       if(expires > e->expires)
         e->expires = expires;
-- 
2.45.2

